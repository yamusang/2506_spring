<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
   <!-- vs code 확장 프로그램 XML(XML Language Support by RedHat) 설치해야 자동 완성합니다. -->
<mapper namespace="org.iclass.spring_3mybatis.mapper.ProductMapper">
<!-- 1.VO 클래스 만들기 2. 설정파일에 mapper와 typealiass 추가 -->
 <!-- 기존의 TblProductDao의 SQL을 여기에서 작성해서 새로운 DAO 만드세요. -->
    <select id="selectAll" resultType="ProductDto">
        SELECT * FROM tbl_product ORDER BY pcode
    </select>
    <select id="searchAll" parameterType="ProductSearchDto" resultType="ProductDto">
        SELECT * FROM tbl_product
        <!-- 조건식이 생기면 where 키워드 추가됩니다. -->
        <where>
            <!-- pcode 필드에 검색어가 있으면 -->
            <if test="pcode !=null and pcode.trim() != ''">
                AND UPPER(PCODE) LIKE '%' || UPPER(#{pcode}) || '%'
            </if>
            <!-- pname 필드에 검색어가 있으면 -->
            <if test="pname !=null and pname.trim() != ''">
                AND UPPER(PNAME) LIKE '%' || UPPER(#{pname}) || '%'
            </if>
            <!-- int 값 조건식 -->
             <if test="minPrice > 0">
                AND PRICE &gt;= #{minPrice}
             </if>
             <if test="maxPrice > 0">
                AND PRICE &lt;= #{maxPrice}
             </if>

        </where>
        ORDER BY pcode
    </select>
    <select id="selectByPk" parameterType="String" resultType="ProductDto">
        SELECT * FROM tbl_product WHERE pcode=#{pcode}
    </select>
    <insert id="insert" parameterType="ProductDto">
        INSERT INTO tbl_product VALUES (#{pcode},#{category},#{pname,jdbcType=VARCHAR},#{price})
        <!-- category 컬럼은 null 허용. 널 값 처리를 위해서 jdbcType = VARCHAR(NUMBERIC)옵션 추가 -->
    </insert>
    <update id="update" parameterType="ProductDto">
        UPDATE tbl_product SET pname = #{pname}, price = #{price} WHERE pcode = #{pcode}
    </update>
    <!-- 새로운 버전의 string 별칭 테스트 -->
    <delete id="delete" parameterType="String">
        DELETE FROM tbl_product WHERE pcode = #{pcode}
    </delete>
</mapper>
